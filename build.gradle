buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: "maven"
apply plugin: "signing"

group = "com.treasuredata.bigdam"
archivesBaseName = "log"
version = "0.1.0"
description = "Logging library for Bigdam components"

sourceCompatibility = 1.8
targetCompatibility = 1.8

//set build variables based on build type (release, continuous integration, development)
def isDevBuild
def isCiBuild
def isReleaseBuild
def sonatypeRepositoryUrl
if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    // logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.8'
    compile group: 'org.komamitsu', name: 'fluency', version: '1.4.0'
    compile group: 'io.sentry', name: 'sentry', version: '1.4.0'
    // common
    compile group: 'com.google.guava', name: 'guava', version: '23.0'
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs += ["-Duser.language=en"]
    options.compilerArgs = ['-Xlint:all']
}

task fmt {
    './misc/java-fmt -a'
}

signing {
    required { isReleaseBuild }
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'log'
                    packaging 'jar'
                    description 'Logging library for Bigdam components'
                    url 'https://github.com/treasure-data/bigdam-log-java'

                    scm {
                        url "scm:git@github.com:treasure-data/bigdam-log-java.git"
                        connection "scm:git@github.com:treasure-data/bigdam-log-java.git"
                        developerConnection "scm:git@github.com:treasure-data/bigdam-log-java.git"
                    }
                    licenses {
                        license {
                            name 'Apache 2.0'
                            url 'https://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    developers {
                        developer {
                            id 'tagomoris'
                            name 'Satoshi Tagomori'
                            email 'tagomoris@gmail.com'
                        }
                    }
                }
            }
        }
    }
}
